// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoomBookingEntityFrameworkDataAccess;

namespace RoomBookingEntityFrameworkDataAccess.Migrations
{
    [DbContext(typeof(RoomBookingContext))]
    partial class RoomBookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RoomBookingPocos.BookingsPoco", b =>
                {
                    b.Property<Guid>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingID");

                    b.ToTable("BookingsTable");
                });

            modelBuilder.Entity("RoomBookingPocos.PaymentTranscationPoco", b =>
                {
                    b.Property<Guid>("PaymentTranscationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AmountPaid")
                        .HasColumnType("int");

                    b.Property<Guid>("BookingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PaymentTranscationID");

                    b.HasIndex("BookingID")
                        .IsUnique();

                    b.ToTable("PaymentTranscation");
                });

            modelBuilder.Entity("RoomBookingPocos.PaymentTranscationPoco", b =>
                {
                    b.HasOne("RoomBookingPocos.BookingsPoco", "Booking")
                        .WithOne("PaymentTranscation")
                        .HasForeignKey("RoomBookingPocos.PaymentTranscationPoco", "BookingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
